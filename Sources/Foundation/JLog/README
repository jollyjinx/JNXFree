I just found out that people still use the generic NSLog. I don’t. I thought that every developer has it’s own logging for development so I thought I might share you mine: JLog
 
A typical debug output of JLog looks like:
 
13/11/08 11:06:50 JollysFastVNC[17520] (00160210.0346)-[ConnectionsController connectClicked:] will connect to:windows.ultra.local
13/11/08 11:06:50 JollysFastVNC[17520] (00160210.0378)-[ConnectionsController connectToHostDictionary:silentLogin:] connecting to host
13/11/08 11:06:50 JollysFastVNC[17520] (001a1c80.0215)-[NetworkConnection connectWithSettings:] trying:192.168.0.13
13/11/08 11:06:50 JollysFastVNC[17520] (001a1c80.0616)-[NetworkConnection connectToAddress:securityType:] Not using a socks proxy
 
It works like NSLog, but it shows the instance , the line of the file, the [Class method] and the messages. The best thing though is, there is a DJLog , D2JLog and D3Jlog for debug logging without asking for DEBUG.
 
The code for the first line looks like this:
 
JLog(@"will connect to:%@ %@",[selectedHost objectForKey:JNXHostnameString],[selectedHost objectForKey:JNXNetworkAddressesString]);
 
For people that still use NON garbagecollected code there is a DEBUGRETAINRELEASECYCLE macro as well so you see when things are allocated and released. That code is from the time before dtrace, nowadays you could just write a probe in Instruments for that as well.
 
Anyways here is my Default.pch and a Multithreaded Objective-C Queue I use it with.
